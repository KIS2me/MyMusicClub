<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="music.mapper.ListSongMapper">
    <resultMap id="BaseResultMap" type="music.domain.ListSong">
        <!-- column是数据库中表的栏位名， property是实体对应的属性名-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="song_id" jdbcType="INTEGER" property="songId"/>
        <result column="song_list_id" jdbcType="INTEGER" property="songListId"/>
    </resultMap>

    <sql id="BaseColumnList">
        id, song_id, song_list_id
    </sql>

    <!--增加-->
    <insert id="insert" parameterType="ListSong">
        insert into list_song
        <trim prefix="(" suffix=")" suffixOverrides=","> /*suffixOverrides用于去掉最后那个逗号*/
            <if test="id != null">
                id,
            </if>
            <if test="songId != null">
                song_id,
            </if>
            <if test="songListId != null">
                song_list_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="songId != null">
                #{songId},
            </if>
            <if test="songListId != null">
                #{songListId},
            </if>
        </trim>
    </insert>

    <!--修改-->
    <update id="update" parameterType="ListSong">
        update list_song
        <set>
            <if test="songId != null">
                song_id = #{songId},
            </if>
            <if test="songListId != null">
                song_list_id = #{songListId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--删除-->
    <delete id="delete" parameterType="Integer">
        delete from list_song where id = #{id}
    </delete>

    <!--根据歌曲id和歌单id删除-->
    <delete id="deleteBySongIdAndSongListId" parameterType="HashMap">
        delete from list_song
        where song_id = #{songId} and song_list_id = #{songListId}
    </delete>

    <!--根据id查询-->
    <select id="selectById" parameterType="Integer" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from list_song where id = #{id}
    </select>

    <!--查询歌单里的所有歌曲-->
    <select id="selectAllListSong" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from list_song
    </select>

    <!--根据歌单id查询歌曲-->
    <select id="selectBySongListId" parameterType="Integer" resultMap="BaseResultMap" >
        select
        <include refid="BaseColumnList"/>
        from list_song
        where song_list_id = #{songListId}
    </select>
</mapper>
